/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Mon Apr 10 20:09:31 GMT 2017
 */

package ru.innopolis.lips.memvit.controller;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.junit.AfterClass;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

@EvoSuiteClassExclude
public class DebugEventsListener_ESTest_scaffolding {

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);

  @BeforeClass 
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "ru.innopolis.lips.memvit.controller.DebugEventsListener"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init(); 
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before 
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("java.vm.vendor", "Oracle Corporation"); 
    java.lang.System.setProperty("java.specification.version", "1.8"); 
            java.lang.System.setProperty("java.home", "/usr/lib/jvm/java-8-openjdk-amd64/jre"); 
            java.lang.System.setProperty("java.awt.headless", "true"); 
    java.lang.System.setProperty("user.home", "/home/pavel"); 
                                        java.lang.System.setProperty("user.dir", "/home/pavel/Projects/Luna/workspace-luna-git-2017/CMemvit"); 
    java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
    java.lang.System.setProperty("awt.toolkit", "sun.awt.X11.XToolkit"); 
    java.lang.System.setProperty("file.encoding", "UTF-8"); 
    java.lang.System.setProperty("file.separator", "/"); 
        java.lang.System.setProperty("java.awt.graphicsenv", "sun.awt.X11GraphicsEnvironment"); 
    java.lang.System.setProperty("java.awt.printerjob", "sun.print.PSPrinterJob"); 
    java.lang.System.setProperty("java.class.path", "/tmp/EvoSuite_pathingJar6643985508517088850.jar"); 
    java.lang.System.setProperty("java.class.version", "52.0"); 
        java.lang.System.setProperty("java.endorsed.dirs", "/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/endorsed"); 
    java.lang.System.setProperty("java.ext.dirs", "/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext"); 
    java.lang.System.setProperty("java.library.path", "lib"); 
    java.lang.System.setProperty("java.runtime.name", "OpenJDK Runtime Environment"); 
    java.lang.System.setProperty("java.runtime.version", "1.8.0_121-8u121-b13-0ubuntu1.16.04.2-b13"); 
    java.lang.System.setProperty("java.specification.name", "Java Platform API Specification"); 
    java.lang.System.setProperty("java.specification.vendor", "Oracle Corporation"); 
        java.lang.System.setProperty("java.vendor", "Oracle Corporation"); 
    java.lang.System.setProperty("java.vendor.url", "http://java.oracle.com/"); 
    java.lang.System.setProperty("java.version", "1.8.0_121"); 
    java.lang.System.setProperty("java.vm.info", "mixed mode"); 
    java.lang.System.setProperty("java.vm.name", "OpenJDK 64-Bit Server VM"); 
    java.lang.System.setProperty("java.vm.specification.name", "Java Virtual Machine Specification"); 
    java.lang.System.setProperty("java.vm.specification.vendor", "Oracle Corporation"); 
    java.lang.System.setProperty("java.vm.specification.version", "1.8"); 
    java.lang.System.setProperty("java.vm.version", "25.121-b13"); 
    java.lang.System.setProperty("line.separator", "\n"); 
    java.lang.System.setProperty("os.arch", "amd64"); 
    java.lang.System.setProperty("os.name", "Linux"); 
    java.lang.System.setProperty("os.version", "4.10.0-041000-generic"); 
    java.lang.System.setProperty("path.separator", ":"); 
    java.lang.System.setProperty("user.country", "RU"); 
    java.lang.System.setProperty("user.language", "ru"); 
    java.lang.System.setProperty("user.name", "pavel"); 
    java.lang.System.setProperty("user.timezone", "Europe/Moscow"); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(DebugEventsListener_ESTest_scaffolding.class.getClassLoader() ,
      "org.eclipse.cdt.debug.mi.core.event.MIMemoryCreatedEvent",
      "org.eclipse.cdt.debug.core.cdi.model.ICDIBreakpointManagement3",
      "org.eclipse.cdt.debug.core.cdi.model.ICDIBreakpointManagement2",
      "org.eclipse.cdt.debug.core.cdi.model.ICDIAddressToSource",
      "org.eclipse.cdt.debug.core.cdi.model.ICDIMemoryBlockManagement",
      "org.eclipse.cdt.debug.mi.core.event.MIEvent",
      "org.osgi.framework.BundleActivator",
      "org.eclipse.cdt.debug.mi.core.cdi.SessionObject",
      "org.eclipse.cdt.debug.core.cdi.event.ICDIEvent",
      "org.eclipse.cdt.debug.mi.core.cdi.event.CreatedEvent",
      "org.eclipse.cdt.debug.core.cdi.model.ICDIExecuteStep",
      "org.eclipse.jface.dialogs.IDialogSettings",
      "org.eclipse.cdt.debug.mi.core.cdi.Session",
      "org.eclipse.cdt.debug.core.cdi.ICDISession",
      "org.eclipse.swt.SWTError",
      "org.eclipse.core.runtime.IStatus",
      "org.eclipse.cdt.debug.mi.core.cdi.model.Target",
      "org.eclipse.cdt.debug.core.cdi.event.ICDIEventListener",
      "org.eclipse.cdt.debug.core.cdi.ICDIEventManager",
      "org.eclipse.cdt.debug.core.cdi.model.ICDIExecuteMoveInstructionPointer",
      "org.eclipse.cdt.debug.core.cdi.model.ICDIObject",
      "org.eclipse.ui.plugin.AbstractUIPlugin",
      "org.eclipse.cdt.debug.core.cdi.ICDISessionObject",
      "org.eclipse.cdt.debug.mi.core.event.MIInferiorCreatedEvent",
      "org.eclipse.cdt.debug.core.cdi.model.ICDISignalManagement",
      "org.eclipse.cdt.debug.core.cdi.model.ICDISharedLibraryManagement",
      "org.osgi.framework.BundleException",
      "org.eclipse.cdt.debug.mi.core.event.MIThreadCreatedEvent",
      "org.eclipse.cdt.debug.mi.core.event.MICreatedEvent",
      "org.eclipse.cdt.debug.core.cdi.model.ICDIExpressionManagement",
      "org.eclipse.cdt.debug.core.cdi.event.ICDICreatedEvent",
      "org.eclipse.cdt.debug.mi.core.event.MIBreakpointCreatedEvent",
      "org.eclipse.cdt.debug.core.cdi.model.ICDIMemoryBlock",
      "org.eclipse.cdt.debug.core.cdi.model.ICDITarget",
      "org.eclipse.cdt.debug.mi.core.event.MISharedLibCreatedEvent",
      "org.eclipse.cdt.debug.core.cdi.model.ICDISourceManagement",
      "org.eclipse.cdt.debug.core.cdi.model.ICDIExecuteResume",
      "org.eclipse.cdt.debug.core.cdi.model.ICDIBreakpointManagement",
      "org.eclipse.core.runtime.Plugin",
      "org.eclipse.cdt.debug.core.cdi.model.ICDIThreadGroup",
      "org.eclipse.cdt.debug.core.cdi.ICDISessionConfiguration",
      "org.eclipse.cdt.debug.core.cdi.model.ICDISuspend",
      "org.eclipse.cdt.debug.core.cdi.CDIException",
      "org.eclipse.cdt.debug.mi.core.event.MIVarCreatedEvent",
      "org.eclipse.cdt.debug.mi.core.event.MIRegisterCreatedEvent",
      "org.eclipse.cdt.debug.core.cdi.model.ICDIThread",
      "ru.innopolis.lips.memvit.controller.DebugEventsListener",
      "ru.innopolis.lips.memvit.Activator"
    );
  } 

  private static void resetClasses() {
  }
}
