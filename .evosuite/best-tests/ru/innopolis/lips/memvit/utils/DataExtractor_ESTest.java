/*
 * This file was automatically generated by EvoSuite
 * Mon Apr 10 19:59:05 GMT 2017
 */

package ru.innopolis.lips.memvit.utils;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.eclipse.cdt.debug.core.cdi.model.ICDIThread;
import org.eclipse.cdt.debug.mi.core.MISession;
import org.eclipse.cdt.debug.mi.core.cdi.Session;
import org.eclipse.cdt.debug.mi.core.cdi.model.Target;
import org.eclipse.cdt.debug.mi.core.cdi.model.Thread;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import ru.innopolis.lips.memvit.utils.DataExtractor;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DataExtractor_ESTest extends DataExtractor_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DataExtractor dataExtractor0 = new DataExtractor();
      // Undeclared exception!
      try { 
        dataExtractor0.extractData((ICDIThread) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("ru.innopolis.lips.memvit.utils.DataExtractor", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      DataExtractor dataExtractor0 = new DataExtractor();
      Target target0 = new Target((Session) null, (MISession) null);
      Thread thread0 = new Thread(target0, 233);
      // Undeclared exception!
      try { 
        dataExtractor0.extractData(thread0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.eclipse.cdt.debug.mi.core.cdi.model.Target", e);
      }
  }
}
