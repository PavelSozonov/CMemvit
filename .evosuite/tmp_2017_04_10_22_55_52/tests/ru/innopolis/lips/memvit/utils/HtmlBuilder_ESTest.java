/*
 * This file was automatically generated by EvoSuite
 * Mon Apr 10 20:01:47 GMT 2017
 */

package ru.innopolis.lips.memvit.utils;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import ru.innopolis.lips.memvit.model.State;
import ru.innopolis.lips.memvit.model.StateImpl;
import ru.innopolis.lips.memvit.utils.HtmlBuilder;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class HtmlBuilder_ESTest extends HtmlBuilder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      StateImpl stateImpl0 = new StateImpl((String) null);
      HtmlBuilder htmlBuilder0 = new HtmlBuilder();
      String string0 = htmlBuilder0.composeBrowserView(stateImpl0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      StateImpl stateImpl0 = new StateImpl((String) null);
      HtmlBuilder htmlBuilder0 = new HtmlBuilder();
      stateImpl0.setData("81pYAJr");
      // Undeclared exception!
      try { 
        htmlBuilder0.composeBrowserView(stateImpl0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONObject text must begin with '{' at 1 [character 2 line 1]
         //
         assertThrownBy("org.json.JSONTokener", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      HtmlBuilder htmlBuilder0 = new HtmlBuilder();
      // Undeclared exception!
      try { 
        htmlBuilder0.composeBrowserView((State) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("ru.innopolis.lips.memvit.utils.HtmlBuilder", e);
      }
  }
}
