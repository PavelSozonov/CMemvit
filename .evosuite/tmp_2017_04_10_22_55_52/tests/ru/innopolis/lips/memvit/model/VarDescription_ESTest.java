/*
 * This file was automatically generated by EvoSuite
 * Mon Apr 10 20:12:31 GMT 2017
 */

package ru.innopolis.lips.memvit.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import ru.innopolis.lips.memvit.model.VarDescription;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class VarDescription_ESTest extends VarDescription_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      VarDescription varDescription0 = new VarDescription("", "", "", "");
      VarDescription varDescription1 = new VarDescription("", "&lt;", "&lt;", "&lt;");
      varDescription0.addNested(varDescription1);
      assertEquals("&amp;lt;", varDescription1.getValue());
      assertEquals("&amp;lt;", varDescription1.getType());
      assertEquals("", varDescription1.getAddress());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      VarDescription varDescription0 = new VarDescription("", "?*tqY8XBEmoW\"3S] C", "", "");
      varDescription0.setType("<");
      assertEquals("&lt;", varDescription0.getType());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      VarDescription varDescription0 = new VarDescription("", "?*tqY8XBEmoW\"3S] C", "", "");
      varDescription0.setAddress("&amp;");
      assertEquals("&amp;amp;", varDescription0.getAddress());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      VarDescription varDescription0 = new VarDescription("a^9E+g5}z", "a^9E+g5}z", "a^9E+g5}z", "a^9E+g5}z");
      String string0 = varDescription0.getType();
      assertEquals("a^9E+g5}z", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      VarDescription varDescription0 = new VarDescription("", "?*tqY8XBEmoW\"3S] C", "", "");
      String string0 = varDescription0.getName();
      assertEquals("", string0);
      assertEquals("", varDescription0.getValue());
      assertEquals("?*tqY8XBEmoW\"3S] C", varDescription0.getType());
      assertEquals("", varDescription0.getAddress());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      VarDescription varDescription0 = new VarDescription("", "", "", "");
      String string0 = varDescription0.getAddress();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      VarDescription varDescription0 = new VarDescription("6PfOzDi", "", "", "");
      VarDescription varDescription1 = new VarDescription("", "-d~qR", "-d~qR", "");
      int int0 = varDescription0.compareTo(varDescription1);
      assertEquals(7, int0);
      assertEquals("-d~qR", varDescription1.getValue());
      assertEquals("-d~qR", varDescription1.getType());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      VarDescription varDescription0 = new VarDescription("&amp;", "&amp;", "P:.aP", "Kw6rELN~");
      VarDescription varDescription1 = new VarDescription("Kw6rELN~", "2H", "2H", "-");
      int int0 = varDescription0.compareTo(varDescription1);
      assertEquals((-37), int0);
      assertEquals("2H", varDescription1.getType());
      assertEquals("P:.aP", varDescription0.getValue());
      assertEquals("&amp;amp;", varDescription0.getType());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      VarDescription varDescription0 = new VarDescription("X6?6:d 0@U $&Z", "X6?6:d 0@U $&Z", "X6?6:d 0@U $&Z", "X6?6:d 0@U $&Z");
      // Undeclared exception!
      try { 
        varDescription0.setValue((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("ru.innopolis.lips.memvit.model.VarDescription", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      VarDescription varDescription0 = new VarDescription("", "?*tqY8XBEmoW\"3S] C", "", "");
      // Undeclared exception!
      try { 
        varDescription0.setName((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("ru.innopolis.lips.memvit.model.VarDescription", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      VarDescription varDescription0 = null;
      try {
        varDescription0 = new VarDescription("", " :-( ", (String) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("ru.innopolis.lips.memvit.model.VarDescription", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      VarDescription varDescription0 = new VarDescription("}d", "}d", "}d", "}d");
      int int0 = varDescription0.compareTo((VarDescription) null);
      assertEquals(0, int0);
      assertEquals("}d", varDescription0.getValue());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      VarDescription varDescription0 = new VarDescription("6B", "6B", "6B", "5s0'b%s#04:@__");
      String string0 = varDescription0.getName();
      assertEquals("6B", varDescription0.getType());
      assertEquals("6B", varDescription0.getAddress());
      assertEquals("6B", varDescription0.getValue());
      assertEquals("5s0'b%s#04:@__", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      VarDescription varDescription0 = new VarDescription("", "", "", "");
      String string0 = varDescription0.getType();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      VarDescription varDescription0 = new VarDescription("6B", "6B", "6B", "5s0'b%s#04:@__");
      String string0 = varDescription0.getAddress();
      assertEquals("6B", varDescription0.getValue());
      assertEquals("6B", string0);
      assertEquals("6B", varDescription0.getType());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      VarDescription varDescription0 = new VarDescription("6B", "6B", "6B", "5s0'b%s#04:@__");
      varDescription0.setName("");
      assertEquals("6B", varDescription0.getValue());
      assertEquals("6B", varDescription0.getAddress());
      assertEquals("6B", varDescription0.getType());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      VarDescription varDescription0 = new VarDescription("6B", "6B", "6B", "5s0'b%s#04:@__");
      varDescription0.setValue("");
      varDescription0.getValue();
      assertEquals("", varDescription0.getValue());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      VarDescription varDescription0 = new VarDescription("", "", "", "");
      // Undeclared exception!
      try { 
        varDescription0.setType((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("ru.innopolis.lips.memvit.model.VarDescription", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      VarDescription varDescription0 = new VarDescription("6B", "6B", "6B", "5s0'b%s#04:@__");
      // Undeclared exception!
      try { 
        varDescription0.setAddress((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("ru.innopolis.lips.memvit.model.VarDescription", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      VarDescription varDescription0 = new VarDescription("", "", "", "");
      varDescription0.getNested();
      assertEquals("", varDescription0.getAddress());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      VarDescription varDescription0 = new VarDescription("6B", "6B", "6B", "5s0'b%s#04:@__");
      String string0 = varDescription0.getValue();
      assertEquals("6B", string0);
      assertEquals("6B", varDescription0.getAddress());
      assertEquals("6B", varDescription0.getType());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      VarDescription varDescription0 = new VarDescription("", "", "", "");
      varDescription0.addNested(varDescription0);
      varDescription0.getNested();
      assertEquals("", varDescription0.getAddress());
  }
}
