/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 02 21:22:49 GMT 2017
 */

package ru.innopolis.lips.memvit.model;

import static org.evosuite.runtime.EvoAssertions.assertThrownBy;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.fail;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.Test;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class VarDescription_ESTest extends VarDescription_ESTest_scaffolding {

	@Test(timeout = 4000)
	public void test00() throws Throwable {
		VarDescription varDescription0 = new VarDescription("", "", "", "");
		VarDescription varDescription1 = new VarDescription("", "x_-Z5t`~I", "J||oaE'DT%ioGWF", "SQwG;>/BH'~?C[Gv:LH");
		varDescription1.addNested(varDescription0);
		assertEquals("", varDescription1.getAddress());
		assertEquals("x_-Z5t`~I", varDescription1.getType());
		assertEquals("J||oaE'DT%ioGWF", varDescription1.getValue());
	}

	@Test(timeout = 4000)
	public void test01() throws Throwable {
		VarDescription varDescription0 = new VarDescription("", "", "", "");
		varDescription0.setValue("");
		assertEquals("", varDescription0.getType());
	}

	@Test(timeout = 4000)
	public void test02() throws Throwable {
		VarDescription varDescription0 = new VarDescription("3J| kR,7npD5P&zS.!U", "3J| kR,7npD5P&zS.!U",
				"3J| kR,7npD5P&zS.!U", "3J| kR,7npD5P&zS.!U");
		String string0 = varDescription0.getValue();
		assertEquals("3J| kR,7npD5P&amp;zS.!U", string0);
	}

	@Test(timeout = 4000)
	public void test03() throws Throwable {
		VarDescription varDescription0 = new VarDescription("@RVV>/XPOM.]OS", "3m3?-;aI[", "@RVV>/XPOM.]OS",
				"@RVV>/XPOM.]OS");
		String string0 = varDescription0.getType();
		assertEquals("@RVV>/XPOM.]OS", varDescription0.getAddress());
		assertEquals("@RVV>/XPOM.]OS", varDescription0.getValue());
		assertEquals("3m3?-;aI[", string0);
	}

	@Test(timeout = 4000)
	public void test04() throws Throwable {
		VarDescription varDescription0 = new VarDescription("iKw9Y@Qb)'b ", "iKw9Y@Qb)'b ", "iKw9Y@Qb)'b ",
				"iKw9Y@Qb)'b ");
		varDescription0.addNested(varDescription0);
		varDescription0.getNested();
		assertEquals("iKw9Y@Qb)'b ", varDescription0.getAddress());
	}

	@Test(timeout = 4000)
	public void test05() throws Throwable {
		VarDescription varDescription0 = new VarDescription("", "", "", "");
		String string0 = varDescription0.getName();
		assertEquals("", string0);
	}

	@Test(timeout = 4000)
	public void test06() throws Throwable {
		VarDescription varDescription0 = new VarDescription("9$(x,!w}7", "9$(x,!w}7", "9$(x,!w}7", "9$(x,!w}7");
		String string0 = varDescription0.getAddress();
		assertEquals("9$(x,!w}7", string0);
	}

	@Test(timeout = 4000)
	public void test07() throws Throwable {
		VarDescription varDescription0 = new VarDescription("d!DjJ|lUQdGD1", "Zyn<0u=2\",,^yjN\"", "d!DjJ|lUQdGD1",
				"Z7ME#P.\"ra^[[3el}:");
		VarDescription varDescription1 = new VarDescription("", "Zyn<0u=2\",,^yjN\"", "x+0'", "Z7ME#P.\"ra^[[3el}:");
		int int0 = varDescription0.compareTo(varDescription1);
		assertEquals("Zyn&lt;0u=2\",,^yjN\"", varDescription1.getType());
		assertEquals(13, int0);
		assertEquals("x+0'", varDescription1.getValue());
	}

	@Test(timeout = 4000)
	public void test08() throws Throwable {
		VarDescription varDescription0 = new VarDescription("3M`b4", "", "", "3M`b4");
		VarDescription varDescription1 = new VarDescription("g~@V!BPO],%WNHE!-", "", "", "");
		int int0 = varDescription0.compareTo(varDescription1);
		assertEquals("", varDescription0.getValue());
		assertEquals("g~@V!BPO],%WNHE!-", varDescription1.getAddress());
		assertEquals("", varDescription0.getType());
		assertEquals((-52), int0);
	}

	@Test(timeout = 4000)
	public void test09() throws Throwable {
		VarDescription varDescription0 = new VarDescription("", "", "", "");
		// Undeclared exception!
		try {
			varDescription0.setType((String) null);
			fail("Expecting exception: NullPointerException");

		} catch (NullPointerException e) {
			//
			// no message in exception (getMessage() returned null)
			//
			assertThrownBy("ru.innopolis.lips.memvit.model.VarDescription", e);
		}
	}

	@Test(timeout = 4000)
	public void test10() throws Throwable {
		VarDescription varDescription0 = new VarDescription("viF", "SlMm<e", "viF", "");
		// Undeclared exception!
		try {
			varDescription0.setName((String) null);
			fail("Expecting exception: NullPointerException");

		} catch (NullPointerException e) {
			//
			// no message in exception (getMessage() returned null)
			//
			assertThrownBy("ru.innopolis.lips.memvit.model.VarDescription", e);
		}
	}

	@Test(timeout = 4000)
	public void test11() throws Throwable {
		VarDescription varDescription0 = new VarDescription("", "", "", "");
		// Undeclared exception!
		try {
			varDescription0.setAddress((String) null);
			fail("Expecting exception: NullPointerException");

		} catch (NullPointerException e) {
			//
			// no message in exception (getMessage() returned null)
			//
			assertThrownBy("ru.innopolis.lips.memvit.model.VarDescription", e);
		}
	}

	@Test(timeout = 4000)
	public void test12() throws Throwable {
		@SuppressWarnings("unused")
		VarDescription varDescription0 = null;
		try {
			varDescription0 = new VarDescription("+$CBj? ;spI?", "", (String) null, "");
			fail("Expecting exception: NullPointerException");

		} catch (NullPointerException e) {
			//
			// no message in exception (getMessage() returned null)
			//
			assertThrownBy("ru.innopolis.lips.memvit.model.VarDescription", e);
		}
	}

	@Test(timeout = 4000)
	public void test13() throws Throwable {
		VarDescription varDescription0 = new VarDescription("", "3m3?-;aI[", "3m3?-;aI[", "3m3?-;aI[");
		String string0 = varDescription0.getAddress();
		assertEquals("", string0);
		assertEquals("3m3?-;aI[", varDescription0.getType());
		assertEquals("3m3?-;aI[", varDescription0.getValue());
	}

	@Test(timeout = 4000)
	public void test14() throws Throwable {
		VarDescription varDescription0 = new VarDescription("", "", "", "");
		int int0 = varDescription0.compareTo((VarDescription) null);
		assertEquals(0, int0);
		assertEquals("", varDescription0.getAddress());
	}

	@Test(timeout = 4000)
	public void test15() throws Throwable {
		VarDescription varDescription0 = new VarDescription("H{=b$d9OfQDU]", "H{=b$d9OfQDU]", "H{=b$d9OfQDU]",
				"H{=b$d9OfQDU]");
		String string0 = varDescription0.getName();
		assertEquals("H{=b$d9OfQDU]", string0);
	}

	@Test(timeout = 4000)
	public void test16() throws Throwable {
		VarDescription varDescription0 = new VarDescription("3M`b4", "", "", "3M`b4");
		String string0 = varDescription0.getType();
		assertEquals("", string0);
		assertEquals("", varDescription0.getValue());
		assertEquals("3M`b4", varDescription0.getAddress());
	}

	@Test(timeout = 4000)
	public void test17() throws Throwable {
		VarDescription varDescription0 = new VarDescription("3M`b4", "", "", "3M`b4");
		varDescription0.setName("");
		assertEquals("", varDescription0.getValue());
		assertEquals("", varDescription0.getType());
		assertEquals("3M`b4", varDescription0.getAddress());
	}

	@Test(timeout = 4000)
	public void test18() throws Throwable {
		VarDescription varDescription0 = new VarDescription("H{=b$d9OfQDU]", "H{=b$d9OfQDU]", "H{=b$d9OfQDU]",
				"H{=b$d9OfQDU]");
		// Undeclared exception!
		try {
			varDescription0.setValue((String) null);
			fail("Expecting exception: NullPointerException");

		} catch (NullPointerException e) {
			//
			// no message in exception (getMessage() returned null)
			//
			assertThrownBy("ru.innopolis.lips.memvit.model.VarDescription", e);
		}
	}

	@Test(timeout = 4000)
	public void test19() throws Throwable {
		VarDescription varDescription0 = new VarDescription("H{=b$d9OfQDU]", "H{=b$d9OfQDU]", "H{=b$d9OfQDU]",
				"H{=b$d9OfQDU]");
		varDescription0.setType("!o");
		assertEquals("!o", varDescription0.getType());
	}

	@Test(timeout = 4000)
	public void test20() throws Throwable {
		VarDescription varDescription0 = new VarDescription("3M`b4", "", "", "3M`b4");
		assertEquals("3M`b4", varDescription0.getAddress());

		varDescription0.setAddress("");
		assertEquals("", varDescription0.getValue());
	}

	@Test(timeout = 4000)
	public void test21() throws Throwable {
		VarDescription varDescription0 = new VarDescription("3M`b4", "", "", "3M`b4");
		varDescription0.getNested();
		assertEquals("", varDescription0.getType());
		assertEquals("3M`b4", varDescription0.getAddress());
		assertEquals("", varDescription0.getValue());
	}

	@Test(timeout = 4000)
	public void test22() throws Throwable {
		VarDescription varDescription0 = new VarDescription("3M`b4", "", "", "3M`b4");
		String string0 = varDescription0.getValue();
		assertEquals("", string0);
		assertEquals("3M`b4", varDescription0.getAddress());
		assertEquals("", varDescription0.getType());
	}
}
