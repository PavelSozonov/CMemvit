/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 02 21:21:57 GMT 2017
 */

package ru.innopolis.lips.memvit.utils;

import static org.evosuite.runtime.EvoAssertions.assertThrownBy;
import static org.junit.Assert.fail;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.TooManyResourcesException;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.Test;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class FileWriter2_ESTest extends FileWriter2_ESTest_scaffolding {

	@Test(timeout = 4000)
	public void test0() throws Throwable {
		FileSystemHandling.shouldAllThrowIOExceptions();
		System.setCurrentTimeMillis(1L);
		FileWriter2.writeJson("/home/pavel/Projects/JSONs/CMemvit_");
		FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
		System.setCurrentTimeMillis(1L);
		FileWriter2.writeLog((-1392), "");
		FileWriter2.writeLog((-1392), "");
		FileWriter2.writeJson("a%(unF(^_N']ZO#");
	}

	@Test(timeout = 4000)
	public void test1() throws Throwable {
		FileWriter2.writeJson("n']R8,\"/kcCum");
		FileWriter2.writeJson("WY/~AyS1");
		FileSystemHandling.shouldAllThrowIOExceptions();
		@SuppressWarnings("unused")
		FileWriter2 fileWriter2_0 = new FileWriter2();
		FileWriter2.writeLog((-1), "erIEeBu`GVl9PJhg");
		System.setCurrentTimeMillis((-962L));
	}

	@Test(timeout = 4000)
	public void test2() throws Throwable {
		FileWriter2.writeLog(4409, ")Zqd| 5NY=f=1_J");
		FileWriter2.writeLog(")Zqd| 5NY=f=1_J");
		FileWriter2.writeLog(1494, "    ");
		FileWriter2.writeJson("");
		FileWriter2.writeJson("u! UhBRzHJ");
		FileWriter2.writeJson(")Zqd| 5NY=f=1_J");
		FileWriter2.writeJson("~ej$gXQX)Y,LY2");
		@SuppressWarnings("unused")
		FileWriter2 fileWriter2_0 = new FileWriter2();
		FileWriter2.writeLog(1, "Cc)YZWF_ANYG");
		FileWriter2.writeLog((String) null);
		// Undeclared exception!
		try {
			FileWriter2.writeLog(4409, "u! UhBRzHJ");
			fail("Expecting exception: TooManyResourcesException");

		} catch (TooManyResourcesException e) {
			//
			// Loop has been executed more times than the allowed 10000
			//
			assertThrownBy("org.evosuite.runtime.LoopCounter", e);
		}
	}

	@Test(timeout = 4000)
	public void test3() throws Throwable {
		FileWriter2.writeJson("l$wRJwBn~!xwk*`@6");
		FileWriter2.writeLog(441, "l$wRJwBn~!xwk*`@6");
		FileWriter2.writeLog("t29Vy66A%}YJ");
		FileWriter2.writeLog((-760), (String) null);
		FileWriter2.writeJson("dd.MM.yyyy_HH-mm-ss-SSS");
		FileWriter2.writeJson("");
		FileWriter2.writeJson("");
		FileWriter2.writeJson("");
		// Undeclared exception!
		try {
			FileWriter2.writeJson((String) null);
			fail("Expecting exception: NullPointerException");

		} catch (NullPointerException e) {
			//
			// no message in exception (getMessage() returned null)
			//
			assertThrownBy("java.io.Writer", e);
		}
	}

	@Test(timeout = 4000)
	public void test4() throws Throwable {
		FileWriter2.writeLog((-211), "");
		FileWriter2.writeLog(0, "");
	}

	@Test(timeout = 4000)
	public void test5() throws Throwable {
		FileWriter2.writeLog(2103, (String) null);
		@SuppressWarnings("unused")
		FileWriter2 fileWriter2_0 = new FileWriter2();
		@SuppressWarnings("unused")
		FileWriter2 fileWriter2_1 = new FileWriter2();
		@SuppressWarnings("unused")
		FileWriter2 fileWriter2_2 = new FileWriter2();
		FileWriter2.writeLog("");
		FileWriter2.writeLog(2103, "s!]c##X!");
		FileWriter2.writeLog(2103, (String) null);
	}

	@Test(timeout = 4000)
	public void test6() throws Throwable {
		FileWriter2.writeJson("'suRfe|");
	}
}
